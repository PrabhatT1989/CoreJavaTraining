what is class?

class is a combination of Methods/variable , Object and Constructor

if anything is missing we cant execute our pgm


class A
{

//varible/method and constructor , object

sysout(
}

what is object?


Object is a replica of class - it is a blue print of class



WebDriver driver = new ChromeDriver() //run time polymorphism/constructor //MOL/OR /Inheritance/class and object


Assignment :- create 4 class and each class should contains 3 method
all method should call inside into psvm 

one jave file


12.5+12.5


WHAT IS INHERITANCE ?

aquaring the properties from the parent class - that is inheritance
we can achieve with the help of extends keyword in java



what is multilevel inheritance

step by step inheritance or Generation by generation transformation is called a Multilevel inheritance



what is multiple inheritance

one class want to inherit more than one class at a time - multiple inheritance


can we achieve multiple inheritance in java

No , we cant achieve multiple inheritance at class level but we can achieve at interface level

Interface part will discuss later


what is the major difference of multiple and multilevel inheritance




what is single inheritance --- is simple inheritance -- extends 


what is many to one inheritance


what is one to many inheritance-- Multiple inheritance - interface level

Assignment :- Currency - 

which country you will create a object that currency should print - 

with the help of inheritance

India a= new India()
a.

Method Overloading - Same Methods but different signature/parameter/data type is called a
Method Overloading

We can achieve at single class only - no need to use inheritance

Data Type

10 20 30 --- by default it is integer

int- whole number --  medium Range
long -- whole number --- high Range
short-- whole number ---- less than integer but higher than byte
byte -- whole number -- very less

double -- decimal value --- high range
float -- decimal value---- Low range


blooean -- true /false

Char -- 'a'

String - String is not a Data type - it is class 
that part will discuss at String Concept - we will use like a Data Type -- "<Anything>" 

Method Over riding :-  Same Methods , Same Signature but different implementation - that is called a method over riding

we can achieve with the help of inheritance

Assignment :- MNC Pgm with the help of method overriding

Constructor -

5methods

|America| Nike | A1 |
|Austrilia | Puma | A2 |

Wait wait = new Wait(

wait.until(ex


withtimeout
polling every 
util


Constructor :- 

Constructor name and class name should be same

if  user not declaring any constructor - jvm will create default/blank constructor

if user is declaring any constructor - jvm never create balnk/default constructor

constructor doesnt have any return type ------ like a void 


Polymorphism :- Same object behaving different different instance through out the execution of the pgm

That is called a Polymorphism.


Two Type Of polymorphism

Run Time Polymorphism --- Method Over riding , Inheritance , Upcasting --- all three is mandatory to achive RTP


Create a object of parent and call child constructor is called a Upcating

Compile Time Polymorphsim ---- Method Over loading

Assignment - How we can say that method over loading is a part of  Compile Time Polymorphism



Abstraction - - it is a Keyword in java

Abstract can be a class and method as well but some conditionis there 

If class is abstract then we can apply abstract method 

Abstrcat can contains Abstract method and non abstract method as well

Abstract Method - Unimplemented /Undefined / with out body

Non Abstract Method - That is same method which we are declaring in other class as well

Abtract class is not a Complete class 

we cant achieve 100% abstraction in Abstract class 


Interface - achieve only abstract method - 100% abstraction in interface


Interface can contain only abstract method

It is not mandatory give keyword of abstract in Method - by default any method is called a Abstract method


Class can Implements Interface - 

class - class - Extends
interface - interface - extends
Interface - class - implements

Nested Classes ?


class - class -  true

Class - Interface -- True

Interface - Class  -- True

Interface - Interface    True

Anonymous Class ?


super - Parent

--Super will use in Variable
- Super will use in Methods
--Super will use in Constructor 


Super calling Parent 

when we will use super - always we will use extends keyword - that is mandatory

if Constructor doesnt have any parameter in parent class - Super will invoke by default 

super constructor should be first statement


This -  Current

This is use for variable/Methods and Constrcutor



- static can be a variable
-static can be a method
-static can be nested class


stack memory   heap memory   class memeory

shape              tringle       shape= tringle


String is Immutable 























